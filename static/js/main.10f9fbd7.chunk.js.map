{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRotations","file","setState","rotations","checkUploads","handleSpots","spots","state","creativeCPV","rotationCPV","bind","assertThisInitialized","calculateCPVCreative","calculateCPVRotation","length","summary_views","summary_costs","i","parseFloat","summary","key","push","name","start","changeToTwentyFour","end","spot_time","temp","split","time","match","exec","result","parseInt","creative_items","map","item","react_default","a","createElement","rotation_items","className","class","react_csv_reader_default","cssClass","label","onFileLoaded","inputId","inputStyle","color","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10f9fbd7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport CSVReader from 'react-csv-reader'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            creativeCPV: [],\r\n            rotationCPV: []\r\n        };\r\n        this.handleRotations = this.handleRotations.bind(this);\r\n        this.handleSpots = this.handleSpots.bind(this);\r\n        this.checkUploads = this.checkUploads.bind(this);\r\n        this.calculateCPVCreative = this.calculateCPVCreative.bind(this);\r\n        this.calculateCPVRotation = this.calculateCPVRotation.bind(this);\r\n    }\r\n\r\n    handleRotations = file => {\r\n        this.setState({rotations: file});\r\n        this.checkUploads();\r\n    }\r\n\r\n    handleSpots = file =>{\r\n        this.setState({spots: file});\r\n        this.checkUploads();\r\n    }\r\n\r\n    checkUploads() {\r\n        if(this.state.rotations &&\r\n           this.state.rotations.length > 0 &&\r\n           this.state.spots &&\r\n           this.state.spots.length > 0) {\r\n            this.calculateCPVCreative();\r\n            this.calculateCPVRotation();\r\n        }\r\n    }\r\n\r\n    calculateCPVCreative() {\r\n        let summary_views = [];\r\n        let summary_costs = [];\r\n        for (let i = 0; i < this.state.spots.length; i++) {\r\n            if (i === 0) {\r\n                continue;\r\n            }\r\n            if (2 in this.state.spots[i]) {\r\n                if (this.state.spots[i][2] in summary_views) {\r\n                    summary_views[this.state.spots[i][2]] += parseFloat(this.state.spots[i][3]);\r\n                    summary_costs[this.state.spots[i][2]] += parseFloat(this.state.spots[i][4]);\r\n                } else {\r\n                    summary_views[this.state.spots[i][2]] = parseFloat(this.state.spots[i][3]);\r\n                    summary_costs[this.state.spots[i][2]] = parseFloat(this.state.spots[i][4]);\r\n                }\r\n            }\r\n        }\r\n        let summary = [];\r\n        for (let key in summary_costs){\r\n            summary.push('The creative ' + key + ' has a cpv of ' + (summary_costs[key]/summary_views[key]))\r\n        }\r\n        this.setState({creativeCPV: summary});\r\n    }\r\n\r\n    calculateCPVRotation() {\r\n        let rotations = [];\r\n        for (let i = 0; i < this.state.rotations.length; i++) {\r\n            if (i === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (1 in this.state.rotations[i]) {\r\n                let name = this.state.rotations[i][2];\r\n                let start = this.changeToTwentyFour(this.state.rotations[i][0]);\r\n                let end = this.changeToTwentyFour(this.state.rotations[i][1]);\r\n                rotations.push({name: name, start: start, end: end});\r\n            }\r\n        }\r\n        let summary_views = [];\r\n        let summary_costs = [];\r\n        for (let i = 0; i < this.state.spots.length; i++) {\r\n            if (i === 0) {\r\n                continue;\r\n            }\r\n            if (1 in this.state.spots[i]) {\r\n                for (let key in rotations) {\r\n                    let spot_time = this.changeToTwentyFour(this.state.spots[i][1]);\r\n                    if (spot_time <= rotations[key].end && spot_time >= rotations[key].start) {\r\n                        if (rotations[key].name + '__' + this.state.spots[i][0] in summary_views) {\r\n                            summary_views[rotations[key].name + '__' + this.state.spots[i][0]] += parseFloat(this.state.spots[i][3]);\r\n                            summary_costs[rotations[key].name + '__' + this.state.spots[i][0]] += parseFloat(this.state.spots[i][4]);\r\n                        } else {\r\n                            summary_views[rotations[key].name + '__' + this.state.spots[i][0]] = parseFloat(this.state.spots[i][3]);\r\n                            summary_costs[rotations[key].name + '__' + this.state.spots[i][0]] = parseFloat(this.state.spots[i][4]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let summary = [];\r\n        for (let key in summary_costs){\r\n            let temp = key.split('__');\r\n            summary.push('The ' + temp[0] + ' rotation  on ' + temp[1] + ' has a cpv of ' + (summary_costs[key]/summary_views[key]))\r\n        }\r\n        this.setState({rotationCPV: summary});\r\n    }\r\n\r\n    changeToTwentyFour(time) {\r\n        let reg = /([0-9]+):([0-9]+) ([A-Z]{2})/g;\r\n        let match = reg.exec(time);\r\n        let result = parseInt(match[1]+match[2]);\r\n        if (match[3] === 'PM' && match[1] !== '12') {\r\n            result += 1200;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const creative_items = this.state.creativeCPV.map((item, key) =>\r\n            <li key={key}> {item} </li>\r\n        );\r\n        const rotation_items = this.state.rotationCPV.map((item, key) =>\r\n            <li key={key}> {item} </li>\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                <header class=\"o-cpv__header\">\r\n                    CPV Calculator\r\n                </header>\r\n                <CSVReader\r\n                    cssClass=\"csv-reader-input\"\r\n                    label=\"Select CSV with Rotations\"\r\n                    onFileLoaded={this.handleRotations}\r\n                    inputId=\"rotations\"\r\n                    inputStyle={{color: 'red'}}\r\n                />\r\n                <br/>\r\n                <CSVReader\r\n                    cssClass=\"csv-reader-input\"\r\n                    label=\"Select CSV with Spots\"\r\n                    onFileLoaded={this.handleSpots}\r\n                    inputId=\"rotations\"\r\n                    inputStyle={{color: 'red'}}\r\n                />\r\n                <br/>\r\n                <ul>\r\n                    {creative_items}\r\n                </ul>\r\n                <br/>\r\n                <ul>\r\n                    {rotation_items}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}